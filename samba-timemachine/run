#!/bin/bash
set -eu -o pipefail
IMAGE_NAME=samba-timemachine
PLATFORMS="linux/amd64,linux/arm64,linux/arm/v7"
TESTHOST=carbon

build () {
    docker build "${@}" -t "${IMAGE_NAME}:tmp" -f Dockerfile .
}

clean () {
    docker image rm "${IMAGE_NAME}:tmp" || true
}

_test() {
    build --quiet
    bundle config set --local path vendor/bundle
    bundle install
    bundle exec rspec --format documentation
    trivy image "${IMAGE_NAME}:tmp"
}

usage() {
  echo "./run test|build|push|release"
}

find_release(){
    TAG="$(git tag | sort -n | tail -n 1)"
    export TAG
}

release() {
  clean
  export DOCKER_CLI_EXPERIMENTAL=enabled
  find_release
  git checkout "${TAG}"
  docker buildx use testbuilder || docker buildx create --name testbuilder
  docker buildx inspect --bootstrap
  docker buildx build \
    --platform "${PLATFORMS}" \
    -t "timjdfletcher/${IMAGE_NAME}:${TAG}" --push .
  docker buildx build \
    --platform "${PLATFORMS}" \
    -t "timjdfletcher/${IMAGE_NAME}:latest" --push .
}

push() {
  _test
  TAG=$(git rev-parse --short HEAD)
  docker tag "${IMAGE_NAME}:tmp" "timjdfletcher/${IMAGE_NAME}:${TAG}"
  docker tag "${IMAGE_NAME}:tmp" "timjdfletcher/${IMAGE_NAME}:latest"
  docker push "timjdfletcher/${IMAGE_NAME}:${TAG}"
  docker push "timjdfletcher/${IMAGE_NAME}:latest"
}

copyToTestHost () {
    build --quiet
    size=$(docker image inspect samba-timemachine:tmp | jq -r '.[0].Size')
    docker save  "${IMAGE_NAME}:tmp" |\
    pigz -c |\
    pv -s "${size}" |\
    ssh -C "${TESTHOST}" "pigz -d | docker load"
}

CMD=${1:-}

shift || true
case ${CMD} in
    build) build --quiet ;;
    clean) clean ;;
    test) _test ;;
    push) push ;;
    copyToTestHost) copyToTestHost ;;
    release) release ;;
    *) usage ;;
esac
